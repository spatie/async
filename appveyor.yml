build: false
platform:
  - x64
clone_folder: c:\projects\php-project-workspace

## Build matrix for lowest and highest possible targets
environment:
  matrix:
  - dependencies: lowest
    php_ver_target: 7.1
  - dependencies: current
    php_ver_target: 7.2
  - dependencies: highest
    php_ver_target: 7.3

## Cache composer, chocolatey and php bits
cache:
    - composer.phar
    # Cache chocolatey packages
    - C:\ProgramData\chocolatey\bin -> .appveyor.yml
    - C:\ProgramData\chocolatey\lib -> .appveyor.yml
    # Cache php install
    - c:\tools\php -> .appveyor.yml

## Set up environment variables
init:
    - SET PATH=C:\Program Files\OpenSSL;c:\tools\php;%PATH%
    - SET COMPOSER_NO_INTERACTION=1
    - SET PHP=1 # This var is connected to PHP install cache
    - SET ANSICON=121x90 (121x90)

## Install PHP and composer, and run the appropriate composer commandand XDEBUG
install:
    - IF EXIST c:\tools\php (SET PHP=0) # Checks for the PHP install being cached
    - ps: appveyor-retry cinst --params '""/InstallDir:C:\tools\php""' --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $env:php_ver_target | sort { [version]($_ -split '\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')
    - cd c:\tools\php
    - IF %PHP%==1 copy php.ini-production php.ini /Y
    - IF %PHP%==1 echo date.timezone="UTC" >> php.ini
    - IF %PHP%==1 echo extension_dir=ext >> php.ini
    - IF %PHP%==1 echo extension=php_openssl.dll >> php.ini
    - IF %PHP%==1 echo extension=php_mbstring.dll >> php.ini
    - IF %PHP%==1 echo extension=php_fileinfo.dll >> php.ini
   ## - IF %PHP%==1 appveyor-retry appveyor DownloadFile https://xdebug.org/files/php_xdebug-2.5.5-7.0-vc14-nts-x86_64.dll -FileName c:\tools\php\ext\php_xdebug-2.5.5-7.0-vc14-nts-x86_64.dll
   ## - IF %PHP%==1 echo [xdebug] >> php.ini
   ## - IF %PHP%==1 echo zend_extension=php_xdebug-2.5.5-7.0-vc14-nts-x86_64.dll >> php.ini
   ## - IF %PHP%==1 echo zend.assertions=1 >> php.ini
   ## - IF %PHP%==1 echo assert.exception=On >> php.ini
   ## - IF %PHP%==1 echo xdebug.remote_enable=1 >> php.ini
   ## - IF %PHP%==1 echo xdebug.remote_autostart=1 >> php.ini
   ## - IF %PHP%==1 echo xdebug.profiler_enable=off >> php.ini
    - IF %PHP%==1 echo @php %%~dp0composer.phar %%* > composer.bat
    - appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar
    - cd c:\projects\php-project-workspace
    - IF %dependencies%==lowest appveyor-retry composer update --prefer-lowest --no-progress --profile -n
    - IF %dependencies%==current appveyor-retry composer install --no-progress --profile
    - IF %dependencies%==highest appveyor-retry composer update --no-progress --profile -n
   ## - composer show
    - composer self-update
    - composer require php-coveralls/php-coveralls

on_success:
  - ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
      bash codecov.sh -f "coverage.xml"

## Run the actual test
test_script:
    - cd c:\projects\php-project-workspace
    - vendor/bin/phpunit --coverage-clover=coverage.xml
